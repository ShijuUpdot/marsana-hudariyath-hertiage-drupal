{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  {% block content %}
    <div class="swiper-slide">
        <div class="swiper-media-wrapper">
        {% if content.field_slider_image['#items'][0].entity.uri.value is not empty %}
            <img src="{{ file_url(content.field_slider_image['#items'][0].entity.uri.value) }}" alt="" class="media-slider-img">
        {% endif %}
            <video autoplay="" muted="" loop="" id="" playsinline>
            {% if content.field_slider_video['#items'][0].entity.uri.value is not empty %}
                <source src="{{ file_url(content.field_slider_video['#items'][0].entity.uri.value) }}" type="video/mp4">
            {% endif %}
            {% if content.field_slider_webm_video['#items'][0].entity.uri.value is not empty %}
                <source src="{{ file_url(content.field_slider_webm_video['#items'][0].entity.uri.value) }}" type="video/webm">
            {% endif %}
            {% if content.field_slider_ogg_video['#items'][0].entity.uri.value is not empty %}
                <source src="{{ file_url(content.field_slider_ogg_video['#items'][0].entity.uri.value) }}" type="video/ogg">
            {% endif %}
                Your browser does not support HTML5 video.
            </video>
        </div>
        <div class="swiper-content-wrapper">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <h2 class="mb-3">{{ content.field_slider_title[0]|raw }}</h2>
                        {{ content.field_slider_description[0]|raw }}
                    </div>
                </div>
            </div>
        </div>
        <div class="slide-title">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <p class="body-text small text-uppercase">{{ content.field_slider_bottom_text[0]|raw }}</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
  {% endblock %}
{% endblock paragraph %}