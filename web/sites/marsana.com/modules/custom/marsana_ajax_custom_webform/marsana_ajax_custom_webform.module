<?php

/**
 * @file
 * Provides hooks for Webforms Ajax module.
 */

use Drupal\webform\Entity\WebformSubmission;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\SettingsCommand;
use Drupal\Core\Url;
use PHPMailer\PHPMailer\PHPMailer;

/**
 * Implements hook_preprocess_comment().
 */
function ajax_custom_webform_preprocess_commentz(&$variables) {
  $variables['classes_array'][] = 'form-control';
}

/**
 * Implements hook_form_alter().
 */
function marsana_ajax_custom_webform_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#attached']['library'][] = 'marsana_ajax_custom_webform/marsana_ajax_custom_webform';
  if (isset($form['#webform_id'])) {
    if ($form['#webform_id'] == 'contact') {
      $form['elements']['your_name']['#access'] = FALSE;
     // $form['elements']['phone_number']['#access'] = FALSE;
      $form['elements']['email_source']['#access'] = FALSE;
      foreach ($form['elements'] as $k => $val) {
        $el_cl = $k . 'fm';
        $el_lbid = $k . 'fe';
        
        if ($k == 'name') {
          $form['elements'][$k]['#prefix'] = '<div class="form-row w-100' . $el_cl . '">';
          $form['elements'][$k]['#suffix'] = '<label class="error"><span class="error ' . $el_lbid . '"></span></label></div>';
        }
        if ($k == 'email') {
          $form['elements'][$k]['#prefix'] = '<div class="form-row w-100' . $el_cl . '">';
          $form['elements'][$k]['#suffix'] = '<label class="error"><span class="error ' . $el_lbid . '"></span></label></div>';
        }
        if ($k == 'phone_number') {
          $form['elements'][$k]['#prefix'] = '<div class="form-row w-100' . $el_cl . '">';
          $form['elements'][$k]['#suffix'] = '<label class="error"><span class="error ' . $el_lbid . '"></span></label></div>';
        }
        if ($k == 'message') {
          $form['elements'][$k]['#prefix'] = '<div class="form-row w-100' . $el_cl . '">';
          $form['elements'][$k]['#suffix'] = '<label class="error"><span class="error ' . $el_lbid . '"></span></label></div>';
        }
      }

      $form['actions']['submit']['#ajax'] = [
        'callback' => 'marsana_contact_form_callback',
        'wrapper' => 'functionIssue',
        'event' => 'click',
        'progress' => array(
              'type' => 'throbber',
              'message' => t('Sending ...'),
            ),
        '#suffix' => '</div>',
      ];

      $form['actions']['submit']['#validate'][] = 'marsana_contact_form_form_validate';
      return $form;
    }
  }
}

/**
 * Call back function.
 */
function _allowed_formats_remove_textarea_help1($form_element, FormStateInterface $form_state) {
  if (isset($form_element[0]['format'])) {
    // All this stuff is needed to hide the help text.
    unset($form_element[0]['format']['guidelines']);
    unset($form_element[0]['format']['help']);
    unset($form_element[0]['format']['#type']);
    unset($form_element[0]['format']['#theme_wrappers']);
    $form_element[0]['format']['format']['#access'] = FALSE;
    unset($form_element[0]['format']);
  }
  return $form_element;
}

/**
 * Call back function.
 */
function marsana_contact_form_callback(array &$form, FormStateInterface $form_state) {
  $response = new AjaxResponse();
  $language_manager = \Drupal::languageManager();
  $config = \Drupal::config('marsana_custom_configs.settings');
  $confirmmsg = $config->get('custom_configs_contact_success_en');
  $language_code =  $language_manager->getCurrentLanguage()->getId();
  if($language_code == 'ar') {
    $confirmmsg  = $config->get('custom_configs_contact_success_ar');
  } 
  foreach ($form_state->getValues() as $k => $val) {
    $el_cl = '.' . $k . 'fm';
    $el_lbid = '.' . $k . 'fe';
    if (in_array($k, array_keys($form_state->getErrors()))) {
      \Drupal::messenger()->deleteAll();
      $response->addCommand(new InvokeCommand($el_cl, 'addClass', ['has-error']));
      $response->addCommand(new HtmlCommand($el_lbid, $form_state->getErrors()[$k]));
      $response->addCommand(new InvokeCommand($el_lbid, 'css', ['display', 'inline']));
    }
    else {
      $response->addCommand(new InvokeCommand($el_cl, 'removeClass', ['has-error']));
      $response->addCommand(new InvokeCommand($el_lbid, 'css', ['display', 'none']));
    }
  } 
  
  $response->addCommand(new SettingsCommand(['errorcode' => 1], TRUE));
  $response->addCommand(new InvokeCommand('.contact-success', 'css', ['display', 'none']));
  if (empty($form_state->getErrors())) {
    $response->addCommand(new InvokeCommand('#edit-name', 'val', ['']));
    $response->addCommand(new InvokeCommand('#edit-email', 'val', ['']));
    $response->addCommand(new InvokeCommand('#edit-phone-number', 'val', ['']));
    $response->addCommand(new InvokeCommand('#edit-message', 'val', ['']));
    $response->addCommand(new InvokeCommand('.messages', 'css', ['display', 'block']));
    //if($form_state->getCompleteForm()["confirmation"]["#webform"])
    //  $response->addCommand(new HtmlCommand('.messages--status', $form_state->getCompleteForm()["confirmation"]["#webform"]->getSettings()["confirmation_message"]));
      $response->addCommand(new HtmlCommand('.form-alert-msg', $confirmmsg));
      $response->addCommand(new HtmlCommand('.contact-close', "<span aria-hidden='true'>&times;</span>"));
      $response->addCommand(new InvokeCommand('.contact-success', 'css', ['background-color', '#7D9831']));
      $response->addCommand(new InvokeCommand('.contact-success', 'css', ['display', 'block']));
  }
  return $response;
}



/**
 * Implements function to the save address details by server ip address.
 *
 * @param Object $form
 *   Form  Object.
 * @param Object $form_state
 *   Form State Object.
 */
function marsana_contact_form_form_validate($form, FormStateInterface $form_state) {
  $error = FALSE;
  $form_state->setValue('name', strip_tags($form_state->getValue('name')));
  $form_state->setValue('email', strip_tags($form_state->getValue('email')));
  $form_state->setValue('phone_number', strip_tags($form_state->getValue('phone_number')));
  $form_state->setValue('message', strip_tags($form_state->getValue('message')));
  
  $language_manager = \Drupal::languageManager();
  $language_code =  $langcode= $language_manager->getCurrentLanguage()->getId();
  $config = \Drupal::config('marsana_custom_configs.settings');

  $name = $form_state->getValue('name');
  $email = $form_state->getValue('email');
  $contact_number = $form_state->getValue('phone_number');
  $message = $form_state->getValue('message');

  $validate_email=\Drupal::service('email.validator')->isValid($form_state->getValue('email'));
  if (!$name) { 
    $error = TRUE;    
    if($langcode=='ar') {
      $nameErr= $config->get('custom_configs_contact_name_ar');
      $form_state->setErrorByName('name', $nameErr);
     } else {
      $nameErr= $config->get('custom_configs_contact_name_en');
      $form_state->setErrorByName('name', $nameErr);
     }
  } 
  if (!$contact_number) { 
    $error = TRUE;
    if($langcode=='ar') {
      $contactNumberErr= $config->get('custom_configs_contact_contactNo_ar');
      $form_state->setErrorByName('phone_number', $contactNumberErr);    
     } else {  
      $contactNumberErr= $config->get('custom_configs_contact_contactNo_en');
      $form_state->setErrorByName('phone_number', $contactNumberErr);
     }
  } 
  if (!$message) { 
    $error = TRUE;
    if($langcode=='ar') {
      $messageErr= $config->get('custom_configs_contact_message_ar');
      $form_state->setErrorByName('message', $messageErr);    
    } else {
      $messageErr= $config->get('custom_configs_contact_message_en');
      $form_state->setErrorByName('message', $messageErr);
    }
  } 
  if (!$email) { 
    $error = TRUE;    
    if($langcode=='ar') {
      $emailErr= $config->get('custom_configs_contact_email_ar');
      $form_state->setErrorByName('email', $emailErr);    
    } else {
      $emailErr= $config->get('custom_configs_contact_email_en');
      $form_state->setErrorByName('email', $emailErr);
    }
  } 
  if (!$validate_email) { 
    $error = TRUE;
    if($langcode=='ar') {
      $invalidEmailErr= $config->get('custom_configs_contact_invalidemail_ar');
      $form_state->setErrorByName('email', $invalidEmailErr);    
     } else {
      $invalidEmailErr= $config->get('custom_configs_contact_invalidemail_en');
      $form_state->setErrorByName('email', $invalidEmailErr);
     }
  } elseif ($form_state->getValue('phone_number') && strlen(trim($form_state->getValue('phone_number'))) < 4) {
    $error = TRUE;
    $form_state->setErrorByName('phone_number', t('Please enter valid Phone Number.'));
  } else {
		      $from = 'info@marsana.ae';
          if ($config->get('custom_configs_from_mail'))
          {
            $from = $config->get('custom_configs_from_mail');
          } 
          $admin_params = array(
			      'from' => $from,
			      'to' => $from,
            'name' => $name,
            'email' => $email,
            'contact_number' => $contact_number,
            'message' => $message,
			      'subject' => "Contact form has been filled."
          );
		  marsana_contact_mail($admin_params, 'marsanaadminmail');
		  $subject = '';
		  $language_manager = \Drupal::languageManager();
			$language_code =  $language_manager->getCurrentLanguage()->getId();
			if($language_code == 'ar') {
			  $user_template = 'marsanausermailAR';
			  $subject = $config->get('custom_configs_subject_ar');
			} else {
			  $subject = $config->get('custom_configs_subject_en');
			  $user_template = "marsanausermailEN";
			}

		  $user_params = array(
        'from' => $from,
        'to' => $email,
        'name' => $name,
		    'subject' => $subject
      );
		  marsana_contact_mail($user_params, $user_template);

      $path = '/';
      $url = Url::fromUserInput($path);
      $form_state->setRedirectUrl($url);

  }
}

function marsana_contact_mail_office($params, $template){
	
  $config = \Drupal::config('marsana_custom_configs.settings');
  $userName  = $config->get('custom_configs_email_username');
  $password  = $config->get('custom_configs_email_password');
  $host  = $config->get('custom_configs_email_host');
  $port  = $config->get('custom_configs_email_port');
  $SMTPSecure  = $config->get('custom_configs_email_SMTPSecure');

	$mail = new PHPMailer();

	$mail->isSMTP();
	$mail->Host = 'smtp.office365.com';
	$mail->SMTPAuth = true;
	$mail->Username = $userName; //paste one generated by Mailtrap
	$mail->Password = $password; //paste one generated by Mailtrap
	$mail->SMTPSecure = 'tls';
	$mail->Port = 587;

	$mail->setFrom($params['from'], 'Marsana ');
	$mail->addReplyTo($params['from'], 'Marsana ');
	
    global $base_url;
   
	$logo =  $base_url.'/sites/default/files/marsana.png';
	
	$mail->addAddress($params['to'], 'Marsana Contact Form');
	$mail->Subject = $params['subject'];
	$mail->isHTML(true);
	$body_data = array (
	  '#theme' => $template,
	  '#data' => $params,
	  '#logo' => $logo
	);
	$mailContent = \Drupal::service('renderer')->render($body_data); //$message = 'Message from office 365';
	$mail->Body = $mailContent;
	$mail->CharSet = 'UTF-8';

	$mail->send();     

    return;
 }  
 

function marsana_contact_mail($params, $template){

  $config = \Drupal::config('marsana_custom_configs.settings');
  $userName  = $config->get('custom_configs_email_username');
  $password  = $config->get('custom_configs_email_password');
  $host  = $config->get('custom_configs_email_host');
  $port  = $config->get('custom_configs_email_port');
  $SMTPSecure  = $config->get('custom_configs_email_SMTPSecure');
	
	$mail = new PHPMailer();

	$mail->isSMTP();
	$mail->Host = $host;
	$mail->SMTPAuth = true;
	$mail->Username = $userName; //paste one generated by Mailtrap
	$mail->Password = $password; //paste one generated by Mailtrap
	$mail->SMTPSecure = $SMTPSecure;
	$mail->Port = $port;

	$mail->setFrom($params['from'], 'Marsana ');
	$mail->addReplyTo($params['from'], 'Marsana ');
	
    global $base_url;
   
	$logo =  $base_url.'/sites/default/files/marsana.png';
	
	$mail->addAddress($params['to'], 'Marsana Contact Form');
	$mail->Subject = $params['subject'];
	$mail->isHTML(true);
	$body_data = array (
	  '#theme' => $template,
	  '#data' => $params,
	  '#logo' => $logo
	);
	$mailContent = \Drupal::service('renderer')->render($body_data); //$message = 'Message from office 365';
	$mail->Body = $mailContent;
	$mail->CharSet = 'UTF-8';

	$mail->send();     

    return;
 }  
 

function marsana_contact_mail_backup($params, $template){
    $send_mail = new \Drupal\Core\Mail\Plugin\Mail\PhpMail(); // this is used to send HTML emails
    
    $message['headers'] = array(
    'content-type' => 'text/html;charset=UTF-8',
    'MIME-Version' => '1.0',
    'reply-to' => $params['from'],
    'from' => 'Marsana - <'.$params['from'].'>'
    );
    $message['to'] = $params['to'];
    $message['subject'] = $params['subject'];
 
    global $base_url;
    $language_manager = \Drupal::languageManager();
    $language_code =  $language_manager->getCurrentLanguage()->getId();
    
	  $logo =  $base_url.'/sites/default/files/marsana.png';
    
    $body_data = array (
      '#theme' => $template,
      '#data' => $params,
      '#logo' => $logo
    );
    $message['body'] = \Drupal::service('renderer')->render($body_data);
    $send_mail->mail($message);

    return;
  }  

/**
 * Implements hook_mail_alter().
 *
 * Don't send any mail during migration.
 */
function marsana_ajax_custom_webform_mail_alter(&$message) {
  if ($message['id'] == 'webform_contact_email_notification') {
    $restrictWords = \Drupal::config("restrictwords.restrictwords.restrict_words")->get('restrictwords');
    $userProfanityData = explode(",", trim(strip_tags($restrictWords)));
    if (count($userProfanityData) > 0) {
      foreach ($userProfanityData as $userKeyword) {
        $emailBody   = trim($message['body'][0]);
        $findkeyword = trim($userKeyword);
        if (preg_match("/\b" . $findkeyword . "\b/i", $emailBody)) {
          $message['send'] = FALSE; return;
        }
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function marsana_ajax_custom_webform_webform_submission_presave(WebformSubmission $webform_submission) {
  $webform = $webform_submission->getWebform();
  if ($webform->id() == 'contact') {

    $data = $webform_submission->getData();
    $restrictWords = \Drupal::config("restrictwords.restrictwords.restrict_words")->get('restrictwords');
    $userProfanityData = $restrictWords ? explode(",", trim(strip_tags($restrictWords))) : '';
    if (count($userProfanityData) > 0) {
      foreach ($userProfanityData as $userKeyword) {
        $findkeyword = trim($userKeyword);
        if (preg_match("/\b" . $findkeyword . "\b/i", $data['name'])||preg_match("/\b" . $findkeyword . "\b/i", $data['email'])||preg_match("/\b" . $findkeyword . "\b/i", $data['phone'])||preg_match("/\b" . $findkeyword . "\b/i", $data['subject'])||preg_match("/\b" . $findkeyword . "\b/i", $data['message'])) {
          $webform_submission->setElementData('is_content_wrong', 'yes');
        }
      }
    }
  }
}
/**
 * Implements hook_theme() to add the template definition.
 **/
function marsana_ajax_custom_webform_theme($existing, $type, $theme, $path) {

    return array(
        'marsanausermailEN' => array(
            'variables' => array('data' => [],'logo' => NULL),
        ),
        'marsanausermailAR' => array(
            'variables' => array('data' => [],'logo' => NULL),
        ),
        'marsanaadminmail' => array(
            'variables' => array('data' => [],'logo' => NULL),
        ),
    );
}
